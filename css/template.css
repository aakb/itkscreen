body,html{overflow-x:hidden}html{height:100%}body{height:100%;margin:0;width:100%;background-color:#fff;color:#666;font:1em/1.5 "Gibson Light","Helvetica Neue",Helvetica,Arial,sans-serif}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:0;font-weight:400;line-height:1.2;text-rendering:optimizeLegibility}strong{font-weight:bold}em{font-style:italic}em strong{font-weight:bold}fieldset{border-color:#d9d9d9;border-radius:.85em}fieldset+fieldset{margin-top:3em}legend{padding-right:.5em;padding-left:.5em;color:gray;font-size:1.25em;font-weight:600}a:link{color:#157bb3;text-decoration:none}a:visited{color:#126b9c}a:hover{color:#105c85;text-decoration:underline}a:focus{color:#105c85}p{margin-top:0;margin-bottom:0}img{display:inline;height:auto;max-width:100%;width:100%;vertical-align:bottom}.flip-container{-webkit-perspective:300;position:relative}.flip-container .flipper.flipped{-webkit-transform:rotatey(180deg)}.flip-container .flipper{-webkit-transform-style:preserve-3d;-webkit-transition:0.5s}.flip-container .flipper .face{position:absolute;-webkit-backface-visibility:hidden;z-index:2}.flip-container .flipper .front{position:absolute;z-index:1;backface-visibility:hidden}.flip-container .flipper .back{-webkit-transform:rotatey(180deg);backface-visibility:hidden}@font-face{font-family:'Gibson SemiBold';src:url("../assets/fonts/Gibson-SemiBold-webfont.woff") format("woff")}@font-face{font-family:'Gibson Regular';src:url("../assets/fonts/Gibson-Regular-webfont.woff") format("woff")}@font-face{font-family:'Gibson Light';src:url("../assets/fonts/Gibson-Light-webfont.woff") format("woff")}.header{margin-top:3vmin;font-family:'Gibson SemiBold';font-size:3vmin;font-weight:600;text-align:center}.group{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;-moz-justify-content:flex-start;justify-content:flex-start;-webkit-align-content:stretch;-moz-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;-webkit-box-align:start;-ms-flex-align:start;-webkit-align-items:flex-start;-moz-align-items:flex-start;align-items:flex-start;position:relative;margin-top:3vmin}.group+.group{margin-top:6vmin}.group--header-wrapper{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:0;-webkit-flex:0 1 auto;-moz-box-flex:0;-moz-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;-webkit-align-content:flex-start;-moz-align-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-webkit-align-self:stretch;-moz-align-self:stretch;-ms-flex-item-align:stretch;align-self:stretch;min-width:7vmin}.group--header{-webkit-align-self:flex-start;-moz-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;-webkit-flex-basis:100%;-moz-flex-basis:100%;-ms-flex-preferred-size:100%;flex-basis:100%;margin-top:4vmin;font-size:1.5vmin;text-align:center;transform:rotate(-90deg)}.group--member-wrapper{display:-webkit-box;display:-webkit-flex;display:-moz-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-moz-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;-webkit-box-direction:normal;-webkit-box-orient:horizontal;-webkit-flex-direction:row;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;-moz-justify-content:flex-start;justify-content:flex-start;-webkit-align-content:flex-start;-moz-align-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-webkit-box-align:start;-ms-flex-align:start;-webkit-align-items:flex-start;-moz-align-items:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-moz-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:-2vmin}.group--member{position:relative;margin-top:2.5vmin;margin-right:3vmin;margin-bottom:2.5vmin;height:7.5vmin;width:7.5vmin}.group--member-image{border-radius:100%;box-sizing:border-box;height:7.5vmin;width:7.5vmin;background-size:cover}.group--member-content{position:absolute;right:0;left:0;padding:.5vmin 0;background-color:rgba(255,255,255,0.9);text-align:center}.group--member-name{color:#157bb3;font-family:'Gibson SemiBold';font-size:.85vmin}.group--member-meta{font-size:.75vmin}.flip-container{perspective:1000}.flip-container:hover .flipper,.flip-container.hover .flipper{transform:rotateY(180deg)}.flipper{transition:0.6s;transform-style:preserve-3d;position:relative}.front,.back{backface-visibility:hidden;position:absolute;top:0;left:0}.front{z-index:2;transform:rotateY(0deg)}.back{transform:rotateY(180deg)}

/*# sourceMappingURL=data:application/json;base64, */
